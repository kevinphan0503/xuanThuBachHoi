


import React, { useState } from 'react'
import { Mail, Phone, MapPin, Send, Clock, MessageCircle } from 'lucide-react'
import './Contact.css'

const Contact = () => {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    phone: '',
    subject: '',
    message: ''
  })

  const [isSubmitted, setIsSubmitted] = useState(false)

  const handleChange = (e) => {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    })
  }

  const handleSubmit = (e) => {
    e.preventDefault()
    console.log('Form submitted:', formData)
    setIsSubmitted(true)
    setTimeout(() => {
      setIsSubmitted(false)
      setFormData({
        name: '',
        email: '',
        phone: '',
        subject: '',
        message: ''
      })
    }, 3000)
  }

  const contactInfo = [
    {
      icon: <Mail size={24} />,
      title: 'Email',
      content: 'xtbh@gmail.com',
      description: 'G·ª≠i email cho ch√∫ng t√¥i'
    },
    {
      icon: <Phone size={24} />,
      title: 'ƒêi·ªán tho·∫°i',
      content: '+84 903781862',
      description: 'G·ªçi ƒëi·ªán tr·ª±c ti·∫øp Tina Ph√πng'
    },
    {
      icon: <MapPin size={24} />,
      title: 'ƒê·ªãa ch·ªâ',
      content: '144B CMT8,P.C√°i Kh·∫ø,Q.Ninh Ki·ªÅu,C·∫ßn Th∆°, Vi·ªát Nam',
      description: 'VƒÉn ph√≤ng ch√≠nh'
    },
    {
      icon: <Clock size={24} />,
      title: 'Gi·ªù l√†m vi·ªác',
      content: '8:00 - 17:00',
      description: 'Th·ª© 2 - Th·ª© 6'
    }
  ]

  const faqs = [
    {
      question: 'Khi n√†o Xu√¢n Thu B√°ch H·ªôi s·∫Ω ch√≠nh th·ª©c ra m·∫Øt?',
      answer: 'Xu√¢n Thu B√°ch H·ªôi ƒëang ho√†n t·∫•t nh·ªØng b∆∞·ªõc cu·ªëi c√πng v√† s·∫Ω ra m·∫Øt v√†o qu√Ω 2 nƒÉm 2024. Ch√∫ng t√¥i s·∫Ω c·∫≠p nh·∫≠t th√¥ng tin chi ti·∫øt tr√™n website v√† fanpage.'
    },
    {
      question: 'Board game d√†nh cho ƒë·ªëi t∆∞·ª£ng n√†o?',
      answer: 'D√†nh cho t·∫•t c·∫£ m·ªçi ng∆∞·ªùi t·ª´ 12 tu·ªïi tr·ªü l√™n! ƒê·∫∑c bi·ªát ph√π h·ª£p v·ªõi c√°c b·∫°n tr·∫ª y√™u th√≠ch kh√°m ph√° l·ªãch s·ª≠, gia ƒë√¨nh mu·ªën c√≥ tr·∫£i nghi·ªám √Ω nghƒ©a, v√† c√°c tr∆∞·ªùng h·ªçc mu·ªën ƒë∆∞a y·∫øu t·ªë l·ªãch s·ª≠ v√†o ho·∫°t ƒë·ªông gi√°o d·ª•c.'
    },
    {
      question: 'Game ch∆°i bao nhi√™u ng∆∞·ªùi l√† ƒë·∫πp?',
      answer: 'Tr√≤ ch∆°i ph√π h·ª£p v·ªõi 2‚Äì6 ng∆∞·ªùi ch∆°i, nh∆∞ng l√Ω t∆∞·ªüng nh·∫•t l√† 4‚Äì5 ng∆∞·ªùi ƒë·ªÉ ƒë·∫£m b·∫£o v·ª´a ƒë·ªß t∆∞∆°ng t√°c, c·∫°nh tranh, v√† teamwork.'
    },
    {
      question: 'M·ªôt v√°n ch∆°i m·∫•t bao l√¢u?',
      answer: 'Th√¥ng th∆∞·ªùng kho·∫£ng 45‚Äì60 ph√∫t t√πy v√†o s·ªë ng∆∞·ªùi ch∆°i v√† ƒë·ªô "m√°u l·ª≠a" trong m·ªói l∆∞·ª£t ƒëi.'
    },
    {
      question: 'L√†m sao ƒë·ªÉ tr·ªü th√†nh ƒë·ªëi t√°c c·ªßa Xu√¢n Thu B√°ch H·ªôi?',
      answer: 'Ch√∫ng t√¥i lu√¥n ch√†o ƒë√≥n nh·ªØng ƒë·ªëi t√°c mang trong m√¨nh t√¨nh y√™u l·ªãch s·ª≠ v√† kh√°t khao lan t·ªèa b·∫£n s·∫Øc Vi·ªát! B·∫°n c√≥ th·ªÉ g·ª≠i tin nh·∫Øn qua form li√™n h·ªá ho·∫∑c email tr·ª±c ti·∫øp.'
    }
  ]

  // üëá Ph·∫ßn ƒë·ªôi ng≈©
  const teamMembers = [
    
    { name: 'Nguy·ªÖn Th·ªã B·∫£o Tr√¢n', image: '/assets/BT.jpg' },
    { name: 'L√™ Tuy·∫øt MInh', image: '/assets/TM.png' },
    { name: 'Ph√πng C·∫©m Thi', image: '/assets/CT3.png' },
    { name: 'Phan H·ªØu VƒÉn', image: '/assets/HV3.png' },
    { name: 'Phan Nh·∫≠t Qu√Ω', image: '/assets/NQ.jpg' },
    { name: 'Nguy·ªÖn Ho√†ng Ph√∫c', image: '/assets/HP.jpg' }
  ]

  return (
    <div className="contact-page">
      <section className="contact-hero">
        <div className="container">
          <div className="hero-content">
            <h1>Li√™n h·ªá v·ªõi ch√∫ng t√¥i</h1>
            <p>Ch√∫ng t√¥i lu√¥n s·∫µn s√†ng l·∫Øng nghe v√† h·ªó tr·ª£ b·∫°n</p>
          </div>
        </div>
      </section>

      <section className="section contact-info-section">
        <div className="container">
          <div className="contact-info-grid">
            {contactInfo.map((info, index) => (
              <div key={index} className="contact-info-card">
                <div className="info-icon">{info.icon}</div>
                <div className="info-content">
                  <h3>{info.title}</h3>
                  <p className="info-main">{info.content}</p>
                  <p className="info-desc">{info.description}</p>
                </div>
              </div>
            ))}
          </div>
        </div>
      </section>

      <section className="section contact-form-section">
        <div className="container">
          <div className="contact-content">
            <div className="contact-form-container">
              <h2 className="section-title">G·ª≠i tin nh·∫Øn cho ch√∫ng t√¥i</h2>
              <form className="contact-form" onSubmit={handleSubmit}>
                <div className="form-row">
                  <div className="form-group">
                    <label htmlFor="name">H·ªç v√† t√™n *</label>
                    <input
                      type="text"
                      id="name"
                      name="name"
                      value={formData.name}
                      onChange={handleChange}
                      required
                      placeholder="Nh·∫≠p h·ªç v√† t√™n c·ªßa b·∫°n"
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="email">Email *</label>
                    <input
                      type="email"
                      id="email"
                      name="email"
                      value={formData.email}
                      onChange={handleChange}
                      required
                      placeholder="Nh·∫≠p email c·ªßa b·∫°n"
                    />
                  </div>
                </div>

                <div className="form-row">
                  <div className="form-group">
                    <label htmlFor="phone">S·ªë ƒëi·ªán tho·∫°i</label>
                    <input
                      type="tel"
                      id="phone"
                      name="phone"
                      value={formData.phone}
                      onChange={handleChange}
                      placeholder="Nh·∫≠p s·ªë ƒëi·ªán tho·∫°i"
                    />
                  </div>
                  <div className="form-group">
                    <label htmlFor="subject">Ch·ªß ƒë·ªÅ *</label>
                    <select
                      id="subject"
                      name="subject"
                      value={formData.subject}
                      onChange={handleChange}
                      required
                    >
                      <option value="">Ch·ªçn ch·ªß ƒë·ªÅ</option>
                      <option value="preorder">ƒê·∫∑t h√†ng tr∆∞·ªõc</option>
                      <option value="partnership">H·ª£p t√°c</option>
                      <option value="support">H·ªó tr·ª£</option>
                      <option value="feedback">Ph·∫£n h·ªìi</option>
                      <option value="other">Kh√°c</option>
                    </select>
                  </div>
                </div>

                <div className="form-group">
                  <label htmlFor="message">Tin nh·∫Øn *</label>
                  <textarea
                    id="message"
                    name="message"
                    value={formData.message}
                    onChange={handleChange}
                    required
                    rows="5"
                    placeholder="Nh·∫≠p tin nh·∫Øn c·ªßa b·∫°n..."
                  ></textarea>
                </div>

                <button type="submit" className="btn btn-submit">
                  <Send size={20} />
                  G·ª≠i tin nh·∫Øn
                </button>

                {isSubmitted && (
                  <div className="success-message">
                    <MessageCircle size={24} />
                    <p>C·∫£m ∆°n b·∫°n ƒë√£ g·ª≠i tin nh·∫Øn! Ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i s·ªõm.</p>
                  </div>
                )}
              </form>
            </div>

            <div className="contact-map-container">
              <h3>V·ªã tr√≠ c·ªßa ch√∫ng t√¥i</h3>
              <div className="map-placeholder">
                <MapPin size={48} />
                <p>H√† N·ªôi, Vi·ªát Nam</p>
                <span>VƒÉn ph√≤ng ch√≠nh</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* üëá Th√™m section ƒë·ªôi ng≈© ·ªü ƒë√¢y */}
      <section className="section team-section">
        <div className="container">
          <h2 className="section-title">ƒê·ªôi ng≈© c·ªßa ch√∫ng t√¥i</h2>
          <div className="team-grid">
            {teamMembers.map((member, index) => (
              <div key={index} className="team-card">
                <img
                  src={member.image}
                  alt={member.name}
                  className="team-image"
                />
                <h4 className="team-name">{member.name}</h4>
              </div>
            ))}
          </div>
        </div>
      </section>

      <section className="section faq-section">
        <div className="container">
          <h2 className="section-title">C√¢u h·ªèi th∆∞·ªùng g·∫∑p</h2>
          <div className="faq-list">
            {faqs.map((faq, index) => (
              <div key={index} className="faq-item">
                <h4 className="faq-question">{faq.question}</h4>
                <p className="faq-answer">{faq.answer}</p>
              </div>
            ))}
          </div>
        </div>
      </section>
    </div>
  )
}

export default Contact
